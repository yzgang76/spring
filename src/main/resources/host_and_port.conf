OSSM_HOME="."
OSSM_DATA="."
HOST_LOCAL = {
  //set the address to IP in HA environment
  HOST = "localhost"
  PORTS = {
    //AKKA System remote ports
    AKKA_SELF_MONITOR = 3713
    AKKA_SELF_MONITOR_THRESHOLD = 3714
    AKKA_REST_SERVICE = 4741
    AKKA_UMBADAPTER = 4745
    AKKA_CM = 5556
    AKKA_DC_ADAPTER = 5555
    AKKA_PRESENTER = 3733
    AKKA_RECEIVER = 2553
    AKKA_BULK_OP = 5557
    AKKA_MESSENGER = 6000
    AKKA_CLUSTER_MANAGER= 2556

    //other services
    HTTP_MESSENGER = 4000
    HTTP_CLUSTER_MANAGER= 8081
    PRESENTER = 8080
    //the default port of Karios DB is same as present
    #KAIROS_DB = 8080 
    H2_RECEIVER_DB = 9093
    DC_TCP = 9292
    H2_CM_DB = 9192
    UOC_SERVICE = 3000
    KAFKA = 9092
  }
  CM_H2_DBURL = "jdbc:h2:tcp://localhost:"${HOST_LOCAL.PORTS.H2_CM_DB}"/"${OSSM_DATA}"/db/uoc_umm_md5"
}

HOST_PRESENTER = {
  //this could be different with the HOST_LOCAL.HOST, especially in security mode
  HOST = ${HOST_LOCAL.HOST}
  PROTOCOL = "http"
  PORT = ${HOST_LOCAL.PORTS.PRESENTER}
}

//SSL settings of presenter
SSL = {
  TRUSTSTORE_FILE = ${OSSM_HOME}"/ssl/exampletrust.jks"
  TRUSTSTORE_TYPE = "JKS"
  TRUSTSTORE_PASS = "ossmtest"
}

HOST_UOC = {
  protocol = "http"
  host = "127.0.0.1"
  port = ${HOST_LOCAL.PORTS.UOC_SERVICE}

  //https configuration
  ssl.strictSSL = false
  ssl.trustStoreFile=""
  ssl.trustStorePass=""
  ssl.trustStoreType=""
  ssl.keyStoreFile=""
  ssl.keyStorePass=""
  ssl.keyStoreType=""
  ssl.secureProtocols=""
  ssl.cipherSuites=""
  maxTotal=0
  maxTotalPerRoute=0
}

#SSL_UOC = {
#  strictSSL = false
#  //update according to UOC settings
#  trustStoreFile = ""
#  trustStorePass = ""
#  trustStroeType = ""
#}

BULK_OP = {
  CM_H2_DBURL = ${HOST_LOCAL.CM_H2_DBURL}
}

UOC_REMOTE = [
  ${HOST_UOC}
]
Cluster_Name = OSSM_BACKEND
Cluster_Manage_Node1= "akka://"${Cluster_Name}"@"${HOST_LOCAL.HOST}":"${HOST_LOCAL.PORTS.AKKA_CLUSTER_MANAGER}
//KAFKA_IS_ACTIVE=false
//KAFKA_HOST= ${HOST_LOCAL.HOST}

Service_Timeout=30
